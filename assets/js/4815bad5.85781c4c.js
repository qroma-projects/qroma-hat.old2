"use strict";(self.webpackChunkwww_qroma_project=self.webpackChunkwww_qroma_project||[]).push([[6303],{5958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=t(4848),s=t(8453);const i={title:"Devalbo Grayscale Run Image Format"},o=void 0,a={id:"dgsr-image-format",title:"Devalbo Grayscale Run Image Format",description:"Overview",source:"@site/src/get-started/dgsr-image-format.md",sourceDirName:".",slug:"/dgsr-image-format",permalink:"/qroma-hat/get-started/dgsr-image-format",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Devalbo Grayscale Run Image Format"},sidebar:"getStartedSidebar",previous:{title:"Project Notes",permalink:"/qroma-hat/get-started/project-notes"}},l={},c=[{value:"Overview",id:"overview",level:3},{value:"Details",id:"details",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Specification Version 1.0 as of 2023-02-05"}),"\n",(0,r.jsxs)(n.li,{children:["Copyright 2023 - ",(0,r.jsx)(n.a,{href:"https://www.devalbo.com",children:"Devalbo"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Inspired by ",(0,r.jsx)(n.a,{href:"https://qoiformat.org/qoi-specification.pdf",children:"https://qoiformat.org/qoi-specification.pdf"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This format was developed to compress grayscale images for e-ink screens using simple, reasonable implementations in both firmware and Javascript/Typescript implementations for the Qroma Hat project."})}),"\n",(0,r.jsx)(n.h3,{id:"details",children:"Details"}),"\n",(0,r.jsxs)(n.p,{children:["A Devalbo Grayscale Run (DGSR) image file consists of a ",(0,r.jsx)(n.code,{children:"dgsr_header"}),", followed by any number of ",(0,r.jsx)(n.em,{children:"data chunks"}),", and an 8-byte end marker."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'dgsr_header {\r\n  char magic[4];            // 4 magic bytes "dgsr"\r\n  uint32_t width;           // image width in pixels (4 bytes - BE)\r\n  uint32_t height;          // image height in pixels (4 bytes - BE)\r\n};\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Images are encoded row by row, left to right, top to bottom, wrapping to the next line when the row's width has been exceeded. The decoder and encoder start with 0 as the previous pixel value. An image is complete when all pixels specified by ",(0,r.jsx)(n.code,{children:"width x height"})," have been covered."]}),"\n",(0,r.jsxs)(n.p,{children:["Grayscale pixels are encoded with ",(0,r.jsx)(n.em,{children:"data chunks"})," as:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DGSR_OP_PLACE_PIXEL"})," - place a single grayscale pixel (level 0-63)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DGSR_OP_SHORT_RUN"})," - start a short run of the previous pixel (uses 6 bits of op code byte, 0-63 pixels)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DGSR_OP_MEDIUM_RUN"})," - start a medium run of the previous pixel (uses 6 bits of op code byte, plus following 1 byte, treated as two bytes without the top 2 most significant bits)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DGSR_OP_LONG_RUN"})," - start a long run of the previous pixel (uses 6 bits of op code byte, plus following 3 bytes, treated as four bytes without the top 2 most significant bits)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The byte stream's end is marked with 7 ",(0,r.jsx)(n.code,{children:"0x00"})," bytes followed by a single ",(0,r.jsx)(n.code,{children:"0x01"})," byte."]}),"\n",(0,r.jsxs)(n.p,{children:["Possible ",(0,r.jsx)(n.em,{children:"data chunks"})," are:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DGSR_OP_PLACE_PIXEL\r\nDGSR_OP_SHORT_RUN\r\nDGSR_OP_MEDIUM_RUN\r\nDGSR_OP_LONG_RUN\r\n\r\n\r\n\u250c\u2500 DGSR_OP_PLACE_PIXEL \u2500\u2500\u2510\r\n\u2502        Byte[0]         \u2502\r\n\u2502 7  6  5  4  3  2  1  0 \u2502\r\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\r\n\u2502 0  0 \u2502  GS bits (0-63) \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n\u250c\u2500 DGSR_OP_SHORT_RUN \u2500\u2500\u2500\u2500\u2510\r\n\u2502        Byte[0]         \u2502\r\n\u2502 7  6  5  4  3  2  1  0 \u2502\r\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\r\n\u2502 0  1 \u2502  Run length     \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n\u250c\u2500 DGSR_OP_MEDIUM_RUN \u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502        Byte[0]         \u2502 Byte[1] \u2502\r\n\u2502 7  6  5  4  3  2  1  0 \u2502 7 .. 0  \u2502\r\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\r\n\u2502 1  0 \u2502  Run length bits (14)     \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n\u250c\u2500 DGSR_OP_LONG_RUN \u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502        Byte[0]         \u2502 Byte[1] \u2502 Byte[2] \u2502 Byte[3] \u2502\r\n\u2502 7  6  5  4  3  2  1  0 \u2502 7 .. 0  \u2502 7 .. 0  \u2502 7 .. 0  \u2502\r\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\r\n\u2502 1  1 \u2502  Run length bits (30)                         \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);